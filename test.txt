[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[32m.[0m[31mF[0m[31mF[0m[31mF[0m[31mF[0m[31mF[0m[31mF[0m[31mF[0m[32m.[0m[31mF[0m

Failures:

  1) Dog ::create takes in a hash of attributes and uses metaprogramming to create a new dog object. Then it uses the #save method to save that dog to the database
     [31mFailure/Error: [0mexpect([1;34;4mDB[0m[[33m:conn[0m].execute([31m[1;31m"[0m[31mSELECT * FROM dogs[1;31m"[0m[31m[0m)).to eq([[[1;34m1[0m, [31m[1;31m"[0m[31mRalph[1;31m"[0m[31m[0m, [31m[1;31m"[0m[31mlab[1;31m"[0m[31m[0m]])[0m
     [31m[0m
     [31m  expected: [[1, "Ralph", "lab"]][0m
     [31m       got: [][0m
     [31m[0m
     [31m  (compared using ==)[0m
     [36m# ./spec/dog_spec.rb:74:in `block (3 levels) in <top (required)>'[0m

  2) Dog ::create returns a new dog object
     [31mFailure/Error: [0mexpect(dog.name).to eq([31m[1;31m"[0m[31mDave[1;31m"[0m[31m[0m)[0m
     [31m[0m
     [31mNoMethodError:[0m
     [31m  undefined method `name' for nil:NilClass[0m
     [36m# ./spec/dog_spec.rb:80:in `block (3 levels) in <top (required)>'[0m

  3) Dog ::find_by_id returns a new dog object by id
     [31mFailure/Error: [0mdog_from_db = [1;34;4mDog[0m.find_by_id([1;34m1[0m)[0m
     [31m[0m
     [31mNoMethodError:[0m
     [31m  undefined method `find_by_id' for Dog:Class[0m
     [31m  Did you mean?  find_by_name[0m
     [36m# ./spec/dog_spec.rb:88:in `block (3 levels) in <top (required)>'[0m

  4) Dog ::find_or_create_by creates an instance of a dog if it does not already exist
     [31mFailure/Error: [0mdog2 = [1;34;4mDog[0m.find_or_create_by([35mname[0m: [31m[1;31m'[0m[31mteddy[1;31m'[0m[31m[0m, [35mbreed[0m: [31m[1;31m'[0m[31mcockapoo[1;31m'[0m[31m[0m)[0m
     [31m[0m
     [31mNoMethodError:[0m
     [31m  undefined method `find_or_create_by' for Dog:Class[0m
     [36m# ./spec/dog_spec.rb:97:in `block (3 levels) in <top (required)>'[0m

  5) Dog ::find_or_create_by when two dogs have the same name and different breed, it returns the correct dog
     [31mFailure/Error: [0mdog_from_db = [1;34;4mDog[0m.find_or_create_by({[35mname[0m: [31m[1;31m'[0m[31mteddy[1;31m'[0m[31m[0m, [35mbreed[0m: [31m[1;31m'[0m[31mcockapoo[1;31m'[0m[31m[0m})[0m
     [31m[0m
     [31mNoMethodError:[0m
     [31m  undefined method `find_or_create_by' for Dog:Class[0m
     [36m# ./spec/dog_spec.rb:105:in `block (3 levels) in <top (required)>'[0m

  6) Dog ::find_or_create_by when creating a new dog with the same name as persisted dogs, it returns the correct dog
     [31mFailure/Error: [0mnew_dog = [1;34;4mDog[0m.find_or_create_by({[35mname[0m: [31m[1;31m'[0m[31mteddy[1;31m'[0m[31m[0m, [35mbreed[0m: [31m[1;31m'[0m[31mirish setter[1;31m'[0m[31m[0m})[0m
     [31m[0m
     [31mNoMethodError:[0m
     [31m  undefined method `find_or_create_by' for Dog:Class[0m
     [36m# ./spec/dog_spec.rb:114:in `block (3 levels) in <top (required)>'[0m

  7) Dog ::new_from_db creates an instance with corresponding attribute values
     [31mFailure/Error:[0m
     [31m  [0m[32mdef[0m [1;36mself[0m.[1;34mnew_from_db[0m(id, name, breed)[0m
     [31m    [0mnew([35mid[0m: id, [35mname[0m: name, [35mbreed[0m: breed)[0m
     [31m  [0m[32mend[0m[0m
     [31m[0m
     [31mArgumentError:[0m
     [31m  wrong number of arguments (given 1, expected 3)[0m
     [36m# ./lib/dog.rb:26:in `new_from_db'[0m
     [36m# ./spec/dog_spec.rb:123:in `block (3 levels) in <top (required)>'[0m

  8) Dog #update updates the record associated with a given instance
     [31mFailure/Error: [0mteddy.update[0m
     [31m[0m
     [31mNoMethodError:[0m
     [31m  undefined method `update' for #<Dog:0x00000002146a20>[0m
     [36m# ./spec/dog_spec.rb:146:in `block (3 levels) in <top (required)>'[0m

Finished in 0.10246 seconds (files took 1.23 seconds to load)
[31m16 examples, 8 failures[0m

Failed examples:

[31mrspec ./spec/dog_spec.rb:72[0m [36m# Dog ::create takes in a hash of attributes and uses metaprogramming to create a new dog object. Then it uses the #save method to save that dog to the database[0m
[31mrspec ./spec/dog_spec.rb:76[0m [36m# Dog ::create returns a new dog object[0m
[31mrspec ./spec/dog_spec.rb:85[0m [36m# Dog ::find_by_id returns a new dog object by id[0m
[31mrspec ./spec/dog_spec.rb:95[0m [36m# Dog ::find_or_create_by creates an instance of a dog if it does not already exist[0m
[31mrspec ./spec/dog_spec.rb:101[0m [36m# Dog ::find_or_create_by when two dogs have the same name and different breed, it returns the correct dog[0m
[31mrspec ./spec/dog_spec.rb:110[0m [36m# Dog ::find_or_create_by when creating a new dog with the same name as persisted dogs, it returns the correct dog[0m
[31mrspec ./spec/dog_spec.rb:121[0m [36m# Dog ::new_from_db creates an instance with corresponding attribute values[0m
[31mrspec ./spec/dog_spec.rb:143[0m [36m# Dog #update updates the record associated with a given instance[0m

